















org apach common math3 util




faster accur portabl altern link math
link strict math strictmath larg scale comput

fast math fastmath drop replac math strict math strictmath
mean method math code math sin
code math cbrt user directli chang
method code fast math fastmath sin code fast math fastmath cbrt
previou


fast math fastmath speed achiev reli heavili optim compil
code present jvm todai larg tabl
larger tabl lazili initialis setup
time penalis method


note fast math fastmath
extens insid apach common math call algorithm
overhead tabl intialis occur
end user call fast math fastmath method directli
perform figur specif jvm hardwar evalu
run fast math test perform fastmathtestperform test test directori sourc
distribut


fast math fastmath accuraci independ jvm reli
ieee basic oper embed tabl oper
accur ulp domain rang statement
rough global observ behavior
guarante number input william kahan'
href http wikipedia org wiki round tabl maker 27 dilemma tabl
maker' dilemma


fast math fastmath addition method found math strict math strictmath

link asinh
link acosh
link atanh

method found math strict math strictmath provid
fast math fastmath java virtual machin

link copi sign copysign
link expon getexpon
link nextaft
link nextup
link scalb
link copi sign copysign
link expon getexpon
link nextaft
link nextup
link scalb


version


fast math fastmath





























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































reduc input argument payn hanek method
good input inf
output remaind divid
result arrai number
result integ portion mod quadrant
result upper bit remaind
result lower bit remaind

param number reduc
param result placehold put result

reduc payn hanek reducepaynehanek result

convert input bit
inbit doubl raw long bit doubletorawlongbit
expon inbit 0x7ff

convert fix point represent
inbit 0x000fffffffffffff 0x000fffffffffffffl
inbit 0x0010000000000000 0x0010000000000000l

normal input
expon
inbit

base expon shift copi recip2pi
shpi0
shpi shpia
shpi shpib
idx expon
shift expon idx

shift
shpi0 idx recip 2pi idx shift
shpi0 recip 2pi idx shift
shpi shpia recip 2pi idx shift recip 2pi idx shift
shpi shpib recip 2pi idx shift recip 2pi idx shift

shpi0 idx recip 2pi idx
shpi shpia recip 2pi idx
shpi shpib recip 2pi idx


multipli input shpi shpia
inbit
inbit 0xffffffff 0xffffffffl

shpi shpia
shpi shpia 0xffffffff 0xffffffffl






prod prodb
prod proda

bita 0x8000000000000000 0x8000000000000000l
bitb 0x80000000 0x80000000l
bitsum prod prodb 0x8000000000000000 0x8000000000000000l

carri
bita bitb
bita bitb bitsum
prod proda


bita prod prodb 0x8000000000000000 0x8000000000000000l
bitb 0x80000000 0x80000000l

prod prodb prod prodb
prod proda prod proda

bitsum prod prodb 0x8000000000000000 0x8000000000000000l

carri
bita bitb
bita bitb bitsum
prod proda


multipli input shpi shpib
shpi shpib
shpi shpib 0xffffffff 0xffffffffl




collect term


bita prod prodb 0x8000000000000000 0x8000000000000000l
bitb 0x8000000000000000 0x8000000000000000l
prod prodb
bitsum prod prodb 0x8000000000000000 0x8000000000000000l
carri
bita bitb
bita bitb bitsum
prod proda


multipli shpi0
shpi0
shpi0 0xffffffff 0xffffffffl





prod proda


prod proda prod prodb remaind fraction fraction
step
multipli
fix point mulipli
convert float point
multipli


identifi quadrant
part intpart prod proda

multipli
prod proda
prod proda prod prodb
prod prodb

multipli
prod proda
prod proda 0xffffffff 0xffffffffl

bit
bit 0xffffffff 0xffffffffl






prod2 prod2b
prod2 prod2a

bita 0x8000000000000000 0x8000000000000000l
bitb 0x80000000 0x80000000l
bitsum prod2 prod2b 0x8000000000000000 0x8000000000000000l

carri
bita bitb
bita bitb bitsum
prod2 prod2a


bita prod2 prod2b 0x8000000000000000 0x8000000000000000l
bitb 0x80000000 0x80000000l

prod2 prod2b prod2 prod2b
prod2 prod2a prod2 prod2a

bitsum prod2 prod2b 0x8000000000000000 0x8000000000000000l

carri
bita bitb
bita bitb bitsum
prod2 prod2a


multipli input pio4bit
bit
bit 0xffffffff 0xffffffffl




collect term


bita prod2 prod2b 0x8000000000000000 0x8000000000000000l
bitb 0x8000000000000000 0x8000000000000000l
prod2 prod2b
bitsum prod2 prod2b 0x8000000000000000 0x8000000000000000l
carri
bita bitb
bita bitb bitsum
prod2 prod2a


multipli input inputb pio4bit
prod prodb
prod prodb 0xffffffff 0xffffffffl
bit
bit 0xffffffff 0xffffffffl




collect term


bita prod2 prod2b 0x8000000000000000 0x8000000000000000l
bitb 0x8000000000000000 0x8000000000000000l
prod2 prod2b
bitsum prod2 prod2b 0x8000000000000000 0x8000000000000000l
carri
bita bitb
bita bitb bitsum
prod2 prod2a


convert
tmp tmpa prod2 prod2a power high order bit
tmp tmpb prod2 prod2a 0xfff 0xfffl prod2 prod2b power power low bit

sum suma tmp tmpa tmp tmpb
sum sumb sum suma tmp tmpa tmp tmpb

multipli
result part intpart
result sum suma
result sum sumb

































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































