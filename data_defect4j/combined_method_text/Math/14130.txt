daxpi alpha beta1
beta beta
link solv real linear oper reallinearoper real linear oper reallinearoper real vector realvector real vector realvector
link solv place solveinplac real linear oper reallinearoper real vector realvector real vector realvector
middot hat
gmax fast math fastmath ab alpha mach prec
hat middot hat hat
link adjoint oper except nonselfadjointoperatorexcept linear oper
href http www stanford group sol softwar symmlq ps75 pdf
count iter user requir check symmetri
hat middot
definit adjoint work iter
wbar
solut
precondit
init
comput middot solv middot
link iter linear solver event iterativelinearsolverev norm residu getnormofresidu return norm
solut transform system rhat current estim
shift middot sens matrix vector
present context iter understood evalu
word number iter requir reach converg
stop
cgnorm beta1
present definit iter count differ adopt
null bisnul
beta1 dot product dotproduct
implement symmlq iter linear solver propos
number iter symmlq slightli work iter
matrix vector product middot initi phase
wbar set
solut spars indefinit system linear equat siam
set
daxpi shift
context except context
kei code vector2 point offend vector
check symmetri checksymmetri oper
set lanczo vector beta
npdlo except thrownpdloexcept
comput vector approxim unnorm eigenvector
middot middot
entail matrix vector product initi phase
alpha dot product dotproduct
iter count
ident check requir
symmlq implicitli solv system equat
larg base fortran code michael saunder
version
oldb beta
perform initi phase symmlq algorithm
middot accuraci
slightli shift
refer
beta1 beta
hat hat hat middot hat
href paig1975 paig saunder implement
provid posit definit precondition
initi phase good approxim
conjug gradient prefer requir
code paramet
org apach common math3 linear
precondition symmetr link except context exceptioncontext
method invers iter rayleigh quotient iter
goodb
link real linear oper reallinearoper vector oper
wbar arrai real vector arrayrealvector row dimens getrowdimens
gbar alpha
link solv place solveinplac real linear oper reallinearoper real linear oper reallinearoper real vector realvector real vector realvector
product form middot comput effici
oper
paig1975 paig saunder
point
approxim
beta1 fast math fastmath sqrt beta1
residu
make orthogon
stop criterion implement iter stop rhat
ynorm2
small eigenvector
beta1
snprod
initguess initi guess solut
daxpi vty vtv
oldb beta1
linear oper shift middot posit
tnorm alpha alpha beta beta
copi
journal numer analysi
kei code vector1 point offend vector
residu delta user toler
gamma zeta gammazeta beta1
real vector realvector map multipli mapmultipli beta1
account
middot shift middot middot
standard link dimens mismatch except dimensionmismatchexcept
alpha alpha
middot shift middot middot middot
state variabl code object correspond
precondit updat residu middot norm
paig saunder
solver fire
precondit reduc number iter requir solver
vtv dot product dotproduct
gmin gmax
hat middot shift middot middot
link solv real linear oper reallinearoper real vector realvector real vector realvector
stopcrit default stop criterion
kei code vector point offend vector
product account iter count
precondition posit definit relev kei
check
symm symmlq
set lanczo vector beta1
updat norm updatenorm
shift scalar shift suitabl chosen
precondit link iter linear solver event iterativelinearsolverev
copi oper
delta ahat xhat xhat current estim
requir posit definit definit method
vty dot product dotproduct
bstep
href http www stanford group sol softwar symmlq f77
symmlq design solv system linear equat middot
dbar beta
link except context exceptioncontext
link posit definit oper except nonpositivedefiniteoperatorexcept thrown
beta
origin fotran code initi phase
minu ep zeta minusepszeta
kei code oper point offend linear oper
middot
beta dot product dotproduct
time adjoint linear oper defin
symmlq design solv system shift middot middot
inform
beta fast math fastmath sqrt beta
middot middot middot
consid initi guess set
