set equat setequ equat
code
abstract step interpol abstractstepinterpol interpol
gragg bulirsch stoer step interpol graggbulirschstoerstepinterpol gb interpol gbsinterpol
neglig aris
inherit doc inheritdoc
redistribut binari form reproduc copyright
implement basic reimplement java
increas
dot0 ydot0 length
step start stepstart accept step acceptstep interpol dot1 ydot1
comput deriv computederiv step start stepstart step size stepsiz dot1 ydot1
method step size order
interpol store time storetim step start stepstart
equat primari mapper getprimarymapp
stepsiz control
integr expand state od expandablestatefulod equat
limit impli warranti merchant fit
hnew hnew
creat intern work arrai
diagon length
diag y1diag
suit high precis need
modif permit provid
estim chanc converg
fortran code hairer wanner redistribut polici
gragg bulirsch stoer step interpol graggbulirschstoerstepinterpol dot0 ydot0
mid dot ymiddot sequenc length length
substep comput successfulli
log10 log10r fast math fastmath log10 fast math fastmath max tol
interpol shift
optim iter optimalit fast math fastmath min sequenc length
forward equat time gettim
tmp dot ytmpdot length
ordinari differenti equat
diag y1diag sequenc length
deriv middl point step
dot1 ydot1 length
dot1 ydot1
step handler stephandl handler step handler stephandl
ratio sequenc target iter targetit sequenc target iter targetit
previou reject previousreject
softwar advis possibl damag strong
hnew filter step filterstep optim step optimalstep cost step costperstep optim iter optimalit cost step costperstep
initi scale
embed rung kutta method link dormand prince853 integr dormandprince853integr
cost time unit costpertimeunit
time firsttim step islaststep error
diagon sequenc length
dens output handl
contributor liabl direct indirect incident special
extrapol diagon mid dot ymiddot
optim step optimalstep fast math fastmath ab filter step filterstep step size stepsiz fac forward
comput optim stepsiz order
equat author note problem extrem sensit
gragg bulirsch stoer algorithm effici
step adjust bound
gragg bulirsch stoer step interpol graggbulirschstoerstepinterpol interpol
exemplari consequenti damag includ limit
href http www unig hairer prog licenc txt
strong softwar provid copyright holder
converg reach target iter targetit
step start stepstart dot0 ydot0 tmp ytmp tmp dot ytmpdot
profit busi interrupt caus theori
smooth problem richardson
error integr step
equat set complet state setcompletest
notic list condit disclaim
hnew fast math fastmath min hnew int hint
integr order minim comput cost
fac step control2 stepcontrol2 fast math fastmath pow error step control1 stepcontrol1 exp
copyright ernst hairer
deriv end step
version
cost time unit costpertimeunit order control2 ordercontrol2 cost time unit costpertimeunit
gragg bulirsch stoer integr graggbulirschstoerintegr adapt stepsiz integr adaptivestepsizeintegr
conveni reproduc
ratio sequenc sequenc
evalu begin step
error ratio ratio
href http www unig math folk hairer prog nonstiff odex odex
bodi pleiad problem involv quasi collis
comput deriv computederiv step start stepstart dot0 ydot0
interpol error limit stepsiz
error
reset evalu resetevalu
set interpol share integr arrai
reset intern state resetinternalst
int hint max step getmaxstep
error fast math fastmath sqrt error main set dimens mainsetdimens
main set dimens mainsetdimens
hnew initi step initializestep forward target iter targetit scale
mudif
fast math fastmath floor log10 log10r
cost time unit costpertimeunit target iter targetit
tabl border width cellpad align center bgcolor e0e0e0
fac fast math fastmath max pow step control4 stepcontrol4 fast math fastmath min pow fac
redistribut sourc binari form
substep start point share arrai
procur substitut good servic loss data
loop loop
length
iter substep size
nextt step start stepstart step size stepsiz
tmp ytmp
max error maxerror fast math fastmath max error
equat set time settim step start stepstart
overrid
equat complet state getcompletest
gragg bulirsch stoer integr
reject
hnew
discret event handl
interp error interperror
hnew fast math fastmath min fast math fastmath ab step size stepsiz optim step optimalstep target iter targetit
redistribut sourc code retain copyright
mid dot ymiddot diagon
mid dot ymiddot step size stepsiz
estim error end step
check stop iter
diag y1diag length
reject step immedi
int hint fast math fastmath ab step size stepsiz fast math fastmath max fast math fastmath pow interp error interperror
initi order select
modifi midpoint integr current substep
target iter targetit fast math fastmath min optim iter optimalit
reject step order stepsiz
hnew fast math fastmath ab filter step filterstep step size stepsiz stabil reduct stabilityreduct forward
hnew optim step optimalstep target iter targetit
error 0e15 error max error maxerror
tol
hnew optim step optimalstep optim iter optimalit
comput center differ evalu deriv
cost time unit costpertimeunit cost step costperstep optim step optimalstep
mid dot ymiddot factor middl index middleindex
rescal scale
automat step size control essenti
interp error interperror gb interpol gbsinterpol estim error estimateerror scale
limit method effici high order
forward
check converg
tmp ytmp length
step start stepstart equat time gettim
dispatch result
step size stepsiz hnew
step islaststep forward nextt nextt
target iter targetit fast math fastmath max
condit met
scale main set dimens mainsetdimens
reach iter
equat secondari mapper getsecondarymapp
max error maxerror doubl max
order control1 ordercontrol1 cost time unit costpertimeunit target iter targetit
step trystep step start stepstart step size stepsiz scale
step size stepsiz step start stepstart
vec rel toler vecrelativetoler scal rel toler scalrelativetoler vec rel toler vecrelativetoler
gb interpol gbsinterpol comput coeffici computecoeffici step size stepsiz
loop
purpos disclaim event regent
mid dot ymiddot forward
org apach common math od nonstiff
factor fast math fastmath pow sequenc
size decreas
fast math fastmath ab diag y1diag scale
target iter targetit optim iter optimalit
forward step start stepstart step size stepsiz
cost time unit costpertimeunit order control2 ordercontrol2 cost time unit costpertimeunit optim iter optimalit
target iter targetit previou reject previousreject
tabl
interpol store time storetim step start stepstart step size stepsiz
extrapol state middl point step
step newstep
dormand princ depend problem result
hnew int hint
system arraycopi dot1 ydot1 dot0 ydot0 length
dot0 ydot0
reject step immedi reduc order
set state initi setstateiniti
liabil contract strict liabil tort includ
iter data
estim dens output coeffici
error big reduc global step
dimension celesti mechan problem
system arraycopi length
pow fast math fastmath pow step control3 stepcontrol3 exp
math illeg state except mathillegalstateexcept math illeg argument except mathillegalargumentexcept
contributor express impli warranti includ
step comput firststepalreadycomput
sequenc sequenc
saniti check sanitycheck equat
extrapol estim solut step
interpol error useinterpolationerror
extrapol diag y1diag
sequenc
clone
handler reset
cost time unit costpertimeunit order control1 ordercontrol1 cost time unit costpertimeunit
stabil check fail reduc global step
middl index middleindex length
fast math fastmath min sequenc length
extrapol state end step
document materi provid distribut
occur accuraci integr saltzam lorenz
diagon factor middl index middleindex
prepar step
step islaststep
asymptot evolut error
hairer norsett wanner book show limit
time firsttim
sequenc length
optim iter optimalit
exp
expect converg iter
interpol store time storetim equat time gettim
target iter targetit
