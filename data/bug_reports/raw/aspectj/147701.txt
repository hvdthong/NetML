@DeclareParents does not use FQNs for exceptions declared in throws-clauses, leading to NoClassDefFoundError
This is my code:

@Aspect
public class TestBeanAdvice {

    public static class ApplicationContextAwareImpl implements ApplicationContextAware {
        public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {

        }
    }

    @DeclareParents(value="org.springframework.beans.TestBean", defaultImpl=TestBeanAdvice.ApplicationContextAwareImpl.class)
    private ApplicationContextAware implementationInterface;
}

If I use this advice with the load-time weaver I get this exception:

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'testBean' defined in class path resource [org/springframework/context/support/testbean-context.xml]: Instantiation of bean failed; nested exception is java.lang.NoClassDefFoundError: BeansException
Caused by: java.lang.NoClassDefFoundError: BeansException
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2365)
	at java.lang.Class.getDeclaredMethods(Class.java:1763)
	at java.beans.Introspector$1.run(Introspector.java:1265)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.beans.Introspector.getPublicDeclaredMethods(Introspector.java:1263)
	at java.beans.Introspector.getTargetMethodInfo(Introspector.java:1129)
	at java.beans.Introspector.getBeanInfo(Introspector.java:387)
	at java.beans.Introspector.getBeanInfo(Introspector.java:159)
	at org.springframework.beans.CachedIntrospectionResults.<init>(CachedIntrospectionResults.java:142)
	at org.springframework.beans.CachedIntrospectionResults.forClass(CachedIntrospectionResults.java:83)
	at org.springframework.beans.BeanWrapperImpl.setIntrospectionClass(BeanWrapperImpl.java:238)
	at org.springframework.beans.BeanWrapperImpl.setWrappedInstance(BeanWrapperImpl.java:196)
	at org.springframework.beans.BeanWrapperImpl.setWrappedInstance(BeanWrapperImpl.java:179)
	at org.springframework.beans.BeanWrapperImpl.<init>(BeanWrapperImpl.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:502)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:356)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:256)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:167)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:253)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:332)
	at org.springframework.context.support.AspectJClassLoaderWithGenericApplicationContextTests.testCreateApplicationContextWithBeanFactoryAndAspectJClassLoader(AspectJClassLoaderWithGenericApplicationContextTests.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at com.intellij.rt.execution.junit2.JUnitStarter.main(JUnitStarter.java:32)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:90)

(wrapped in a Spring exception, I'm using the container)

After doing some debugging I found the exception appears when loading the dependencies of the TestBean class, so I guess there's a problem with the way the parent is declared in the bytecode of TestBean.

You can find the TestBean class here:

http://fisheye1.cenqua.com/browse/~raw,r=1.28/springframework/spring/test/org/springframework/beans/TestBean.java

Steven
